// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗  
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝  
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//  
// This file is automatically generated 
// Please do not edit these files manually
// Run the following in the root of the repos:
//
// 		*NIX 		:	./build.sh codegen
// 		Windows 	:	build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;
using System.Runtime.Serialization;
using Elasticsearch.Net;
using Elasticsearch.Net.Utf8Json;
using Elasticsearch.Net.Specification.DataFrameApi;

// ReSharper disable RedundantBaseConstructorCall
// ReSharper disable UnusedTypeParameter
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
namespace Nest
{
	[InterfaceDataContract]
	public partial interface IDeleteDataFrameTransformRequest : IRequest<DeleteDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for DeleteTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class DeleteDataFrameTransformRequest : PlainRequestBase<DeleteDataFrameTransformRequestParameters>, IDeleteDataFrameTransformRequest
	{
		protected IDeleteDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameDeleteTransform;
		///<summary>/_data_frame/transforms/{transform_id}</summary>
		///<param name = "transformId">this parameter is required</param>
		public DeleteDataFrameTransformRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected DeleteDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IDeleteDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>
		/// When `true`, the transform is deleted regardless of its current state. The default value is `false`, meaning that the transform must be
		/// `stopped` before it can be deleted.
		///</summary>
		public bool? Force
		{
			get => Q<bool? >("force");
			set => Q("force", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement DeleteDataFrameTransformDescriptor and DeleteDataFrameTransformRequest in a file called DeleteDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IGetDataFrameTransformRequest : IRequest<GetDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for GetTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class GetDataFrameTransformRequest : PlainRequestBase<GetDataFrameTransformRequestParameters>, IGetDataFrameTransformRequest
	{
		protected IGetDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameGetTransform;
		///<summary>/_data_frame/transforms/{transform_id}</summary>
		///<param name = "transformId">Optional, accepts null</param>
		public GetDataFrameTransformRequest(string_ transformId): base(r => r.Optional("transform_id", transformId))
		{
		}

		///<summary>/_data_frame/transforms</summary>
		public GetDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IGetDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>
		/// Whether to ignore if a wildcard expression matches no data frame transforms. (This includes `_all` string or when no data frame transforms
		/// have been specified)
		///</summary>
		public bool? AllowNoMatch
		{
			get => Q<bool? >("allow_no_match");
			set => Q("allow_no_match", value);
		}

		///<summary>skips a number of transform configs, defaults to 0</summary>
		public int? From
		{
			get => Q<int? >("from");
			set => Q("from", value);
		}

		///<summary>specifies a max number of transforms to get, defaults to 100</summary>
		public int? Size
		{
			get => Q<int? >("size");
			set => Q("size", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement GetDataFrameTransformDescriptor and GetDataFrameTransformRequest in a file called GetDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IGetDataFrameTransformStatsRequest : IRequest<GetDataFrameTransformStatsRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for GetTransformStats <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class GetDataFrameTransformStatsRequest : PlainRequestBase<GetDataFrameTransformStatsRequestParameters>, IGetDataFrameTransformStatsRequest
	{
		protected IGetDataFrameTransformStatsRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameGetTransformStats;
		///<summary>/_data_frame/transforms/{transform_id}/_stats</summary>
		///<param name = "transformId">this parameter is required</param>
		public GetDataFrameTransformStatsRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected GetDataFrameTransformStatsRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IGetDataFrameTransformStatsRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>
		/// Whether to ignore if a wildcard expression matches no data frame transforms. (This includes `_all` string or when no data frame transforms
		/// have been specified)
		///</summary>
		public bool? AllowNoMatch
		{
			get => Q<bool? >("allow_no_match");
			set => Q("allow_no_match", value);
		}

		///<summary>skips a number of transform stats, defaults to 0</summary>
		public long? From
		{
			get => Q<long? >("from");
			set => Q("from", value);
		}

		///<summary>specifies a max number of transform stats to get, defaults to 100</summary>
		public long? Size
		{
			get => Q<long? >("size");
			set => Q("size", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement GetDataFrameTransformStatsDescriptor and GetDataFrameTransformStatsRequest in a file called GetDataFrameTransformStatsRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IPreviewDataFrameTransformRequest : IRequest<PreviewDataFrameTransformRequestParameters>
	{
	}

	///<summary>Request for PreviewTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/preview-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class PreviewDataFrameTransformRequest : PlainRequestBase<PreviewDataFrameTransformRequestParameters>, IPreviewDataFrameTransformRequest
	{
		protected IPreviewDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFramePreviewTransform;
		// values part of the url path
		// Request parameters
		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement PreviewDataFrameTransformDescriptor and PreviewDataFrameTransformRequest in a file called PreviewDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IPutDataFrameTransformRequest : IRequest<PutDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for PutTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class PutDataFrameTransformRequest : PlainRequestBase<PutDataFrameTransformRequestParameters>, IPutDataFrameTransformRequest
	{
		protected IPutDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFramePutTransform;
		///<summary>/_data_frame/transforms/{transform_id}</summary>
		///<param name = "transformId">this parameter is required</param>
		public PutDataFrameTransformRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected PutDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IPutDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>If validations should be deferred until data frame transform starts, defaults to false.</summary>
		public bool? DeferValidation
		{
			get => Q<bool? >("defer_validation");
			set => Q("defer_validation", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement PutDataFrameTransformDescriptor and PutDataFrameTransformRequest in a file called PutDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IStartDataFrameTransformRequest : IRequest<StartDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for StartTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/start-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class StartDataFrameTransformRequest : PlainRequestBase<StartDataFrameTransformRequestParameters>, IStartDataFrameTransformRequest
	{
		protected IStartDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameStartTransform;
		///<summary>/_data_frame/transforms/{transform_id}/_start</summary>
		///<param name = "transformId">this parameter is required</param>
		public StartDataFrameTransformRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected StartDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IStartDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>Controls the time to wait for the transform to start</summary>
		public Time Timeout
		{
			get => Q<Time>("timeout");
			set => Q("timeout", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement StartDataFrameTransformDescriptor and StartDataFrameTransformRequest in a file called StartDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IStopDataFrameTransformRequest : IRequest<StopDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for StopTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/stop-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class StopDataFrameTransformRequest : PlainRequestBase<StopDataFrameTransformRequestParameters>, IStopDataFrameTransformRequest
	{
		protected IStopDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameStopTransform;
		///<summary>/_data_frame/transforms/{transform_id}/_stop</summary>
		///<param name = "transformId">this parameter is required</param>
		public StopDataFrameTransformRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected StopDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IStopDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>
		/// Whether to ignore if a wildcard expression matches no data frame transforms. (This includes `_all` string or when no data frame transforms
		/// have been specified)
		///</summary>
		public bool? AllowNoMatch
		{
			get => Q<bool? >("allow_no_match");
			set => Q("allow_no_match", value);
		}

		///<summary>Controls the time to wait until the transform has stopped. Default to 30 seconds</summary>
		public Time Timeout
		{
			get => Q<Time>("timeout");
			set => Q("timeout", value);
		}

		///<summary>Whether to wait for the transform to fully stop before returning or not. Default to false</summary>
		public bool? WaitForCompletion
		{
			get => Q<bool? >("wait_for_completion");
			set => Q("wait_for_completion", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement StopDataFrameTransformDescriptor and StopDataFrameTransformRequest in a file called StopDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}

	[InterfaceDataContract]
	public partial interface IUpdateDataFrameTransformRequest : IRequest<UpdateDataFrameTransformRequestParameters>
	{
		[IgnoreDataMember]
		string_ TransformId
		{
			get;
		}
	}

	///<summary>Request for UpdateTransform <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/update-transform.html</para></summary>
	///<remarks>Note: Beta within the Elasticsearch server, this functionality is in beta and is subject to change. The design and code is less mature than official GA features and is being provided as-is with no warranties. Beta features are not subject to the support SLA of official GA features.</remarks>
	public partial class UpdateDataFrameTransformRequest : PlainRequestBase<UpdateDataFrameTransformRequestParameters>, IUpdateDataFrameTransformRequest
	{
		protected IUpdateDataFrameTransformRequest Self => this;
		internal override ApiUrls ApiUrls => ApiUrlsLookups.DataFrameUpdateTransform;
		///<summary>/_data_frame/transforms/{transform_id}/_update</summary>
		///<param name = "transformId">this parameter is required</param>
		public UpdateDataFrameTransformRequest(string_ transformId): base(r => r.Required("transform_id", transformId))
		{
		}

		///<summary>Used for serialization purposes, making sure we have a parameterless constructor</summary>
		[SerializationConstructor]
		protected UpdateDataFrameTransformRequest(): base()
		{
		}

		// values part of the url path
		[IgnoreDataMember]
		string_ IUpdateDataFrameTransformRequest.TransformId => Self.RouteValues.Get<string_>("transform_id");
		// Request parameters
		///<summary>If validations should be deferred until data frame transform starts, defaults to false.</summary>
		public bool? DeferValidation
		{
			get => Q<bool? >("defer_validation");
			set => Q("defer_validation", value);
		}

		[Obsolete("Unmapped, blacklist this API in CodeConfiguration.cs or implement UpdateDataFrameTransformDescriptor and UpdateDataFrameTransformRequest in a file called UpdateDataFrameTransformRequest.cs in NEST's codebase", true)]
		public bool IsUnmapped => true;
		public bool UseIsUnmapped => IsUnmapped;
	}
}