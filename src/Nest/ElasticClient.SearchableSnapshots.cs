// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗  
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝  
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//  
// This file is automatically generated 
// Please do not edit these files manually
// Run the following in the root of the repos:
//
// 		*NIX 		:	./build.sh codegen
// 		Windows 	:	build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using Elasticsearch.Net.Specification.SearchableSnapshotsApi;

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace Nest.Specification.SearchableSnapshotsApi
{
	///<summary>
	/// Searchable Snapshots APIs.
	/// <para>Not intended to be instantiated directly. Use the <see cref = "IElasticClient.SearchableSnapshots"/> property
	/// on <see cref = "IElasticClient"/>.
	///</para>
	///</summary>
	public class SearchableSnapshotsNamespace : NamespacedClientProxy
	{
		internal SearchableSnapshotsNamespace(ElasticClient client): base(client)
		{
		}

		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.clear_cache</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html</a>
		/// </summary>
		public ClearCacheResponse ClearCache(Indices index = null, Func<ClearCacheDescriptor, IClearCacheRequest> selector = null) => ClearCache(selector.InvokeOrDefault(new ClearCacheDescriptor().Index(index: index)));
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.clear_cache</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html</a>
		/// </summary>
		public Task<ClearCacheResponse> ClearCacheAsync(Indices index = null, Func<ClearCacheDescriptor, IClearCacheRequest> selector = null, CancellationToken ct = default) => ClearCacheAsync(selector.InvokeOrDefault(new ClearCacheDescriptor().Index(index: index)), ct);
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.clear_cache</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html</a>
		/// </summary>
		public ClearCacheResponse ClearCache(IClearCacheRequest request) => DoRequest<IClearCacheRequest, ClearCacheResponse>(request, request.RequestParameters);
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.clear_cache</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-clear-cache.html</a>
		/// </summary>
		public Task<ClearCacheResponse> ClearCacheAsync(IClearCacheRequest request, CancellationToken ct = default) => DoRequestAsync<IClearCacheRequest, ClearCacheResponse>(request, request.RequestParameters, ct);
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.mount</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot</a>
		/// </summary>
		public MountResponse Mount(Name repository, Name snapshot, Func<MountDescriptor, IMountRequest> selector) => Mount(selector.InvokeOrDefault(new MountDescriptor(repository: repository, snapshot: snapshot)));
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.mount</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot</a>
		/// </summary>
		public Task<MountResponse> MountAsync(Name repository, Name snapshot, Func<MountDescriptor, IMountRequest> selector, CancellationToken ct = default) => MountAsync(selector.InvokeOrDefault(new MountDescriptor(repository: repository, snapshot: snapshot)), ct);
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.mount</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot</a>
		/// </summary>
		public MountResponse Mount(IMountRequest request) => DoRequest<IMountRequest, MountResponse>(request, request.RequestParameters);
		/// <summary>
		/// <c>POST</c> request to the <c>searchable_snapshots.mount</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-mount-snapshot</a>
		/// </summary>
		public Task<MountResponse> MountAsync(IMountRequest request, CancellationToken ct = default) => DoRequestAsync<IMountRequest, MountResponse>(request, request.RequestParameters, ct);
		/// <summary>
		/// <c>GET</c> request to the <c>searchable_snapshots.stats</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html</a>
		/// </summary>
		public StatsResponse Stats(Indices index = null, Func<StatsDescriptor, IStatsRequest> selector = null) => Stats(selector.InvokeOrDefault(new StatsDescriptor().Index(index: index)));
		/// <summary>
		/// <c>GET</c> request to the <c>searchable_snapshots.stats</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html</a>
		/// </summary>
		public Task<StatsResponse> StatsAsync(Indices index = null, Func<StatsDescriptor, IStatsRequest> selector = null, CancellationToken ct = default) => StatsAsync(selector.InvokeOrDefault(new StatsDescriptor().Index(index: index)), ct);
		/// <summary>
		/// <c>GET</c> request to the <c>searchable_snapshots.stats</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html</a>
		/// </summary>
		public StatsResponse Stats(IStatsRequest request) => DoRequest<IStatsRequest, StatsResponse>(request, request.RequestParameters);
		/// <summary>
		/// <c>GET</c> request to the <c>searchable_snapshots.stats</c> API, read more about this API online:
		/// <para></para>
		/// <a href = "https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/searchable-snapshots-api-stats.html</a>
		/// </summary>
		public Task<StatsResponse> StatsAsync(IStatsRequest request, CancellationToken ct = default) => DoRequestAsync<IStatsRequest, StatsResponse>(request, request.RequestParameters, ct);
	}
}